postup pro vytvoření nového projektu a import knihoven ze vzorového projektu
=============================================================================

1. Project -> Add new project into workspace -> New Project

2. Napsat jméno projektu, vytvořit složku pro projekt (ideálně stejného jména),
zkontrolovat "toolchain" (cesta k ...\COSMIC\FSE_Compilers\CXSTM8)

3. vybrat MCU ("STM8S208RB")

4. V okně workspace je náš projekt tučně (aktivní). Pokud ne, pravým tlačítkem
označit a dát "Set as Active Project"

5. Otevřít v průzkumníku/commanderu složku s naším projektem (obsahuje složky
Debug a Release a soubory main.c a stm8_interrupt_vector.c)

6. Zkopírovat celý obsah VZOROVÉ složky do složky s vaším projektem (přepíše
existující soubory)

7. V STVD v okně workspace rozkliknout symbol + u jména projektu (otevře se
stromová struktura s virutálními složkami "Source files", "Include files" ...)

8. Pravým tlačítkem na "Source files->Add Files To Folder", nalistujeme složku
s NAŠÍM (ne vzorovým) projektem a otevřeme složku "src" a v ní označíme všechny
soubory (koncovka *.c) a potvrdíme

9. Pravým tlačítkem na "Include files->Add Files To Folder", nalistujeme složku
s NAŠÍM (ne vzorovým) projektem a otevřeme složku "inc" a v ní označíme všechny
soubory (koncovka *.h) a potvrdíme

10. Klikneme na "Project->Settings", v levém sloupci by měl být označen NÁŠ
projekt. Vpravo zvolíme záložku "C compiler" a do řádky "Preprocessor
definitions" napíšeme F_CPU=16000000 (případně jinou číselnou hodnotu podle
toho jakou frekvenci pužíváme, např. 2000000) a potvrdíme

poznámky:
------------------

vzorový projekt obsahuje krom standardních i "nestandardní" knihovny a to:

delay - obsahuje _delay_us(), která slouží pro krátká spoždění v řádu jednotek
až stovek us (slouží k podpoře komunikačních rozhraní, AD převodníku atd.)

milis - umožňuje provádět základní časování (rezervuje si pro svou činnost TIM4
a povolené přerušení - povoluje ho sama volaním funkce init_milis)

spse_stm8 - obsahuje různé užitečné funkce (momentálně ovládání AD převodníku -
ve standardních knihovnách nevhodně řešené) stm8_hd44780 - knihovna pro
ovládání displeje s driverem HD447800 nebo ekvivalentem (3+4 drátové rozhraní)


další poznámky:
------------------

main.c obsahuje vzor kde jsou na začátku zakomentované funkce init_milis a
přepnutí clocku na 16MHz (protože to asi budeme často používat)

stm8s_it.c má zakomentovanou rutinu přerušení timeru 4, takže vyžaduje aby byl
v projektu přítomen soubor milis.c (kde je tělo této rutiny přerušení)

milis.h obsahuje předdefinované hodnoty pro timer pro F_CPU=2MHz a F_CPU=16MHz,
pro jiné taktovací frekvence si člověk musí dodefinovat prescaler a strop sám
